stages:
  - .pre
  - test
  - generate-documentation

variables:
  GENERATE_PDF_JOB_ID: ""

docker-build:
  # Use the official docker image.
  image: docker:23.0.6
  stage: .pre
  tags: 
    - openstack-autoscale
    - autoscale-docker-in-docker
  services:
    - name: docker:23.0.6-dind
      alias: thedockerhost
  variables:
    DOCKER_HOST: tcp://thedockerhost:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
      - apk add --update make && apk add --update bash && apk add --update sudo && apk add --update git && apk add --update curl
      - make build-docker
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
      exists:
        - Dockerfile
    - changes:
      - requirements.txt
      - Dockerfile
      - Makefile

test:
  # Reuse built container.
  image: $DOCKER_IMAGE_NAME
  stage: test
  tags:
    - openstack-autoscale
    - autoscale-docker-in-docker
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - make download-kmers
  script:
    - make test
  dependencies:
    - docker-build

generate_pdf:
  stage: generate-documentation
  when: manual
  image:
    name: pandoc/latex
    entrypoint: ["/bin/sh", "-c"]
  script:
    - pandoc README.md --variable colorlinks=true -V geometry:margin=1in --toc --toc-depth=4 -N -o documentation.pdf
    - echo "GENERATE_PDF_JOB_ID=$CI_JOB_ID" > build.env
  artifacts:
    reports:
      dotenv: build.env
    paths:
      - documentation.pdf

update_readme_with_documentation_link:
  stage: generate-documentation
  image: ubuntu:latest
  needs: [generate_pdf]
  script:
    - apt-get update -qq
    - apt-get install -qq git
    - git config --global user.email "htgt@sanger.ac.uk"
    - git config --global user.name "Cellular Informatics"
    - git remote set-url origin https://write_repository_token:${WRITE_TOKEN}@gitlab.internal.sanger.ac.uk:sci/targeton-designer.git
    - git checkout ${CI_COMMIT_REF_NAME}
    - ARTIFACT_URL="https://gitlab.internal.sanger.ac.uk/api/v4/projects/3264/jobs/${GENERATE_PDF_JOB_ID}/artifacts/documentation.pdf"
    - sed -i "s|https://gitlab.internal.sanger.ac.uk/api/v4/projects/3264/jobs/[0-9]\+/artifacts/documentation.pdf|${ARTIFACT_URL}|g" README.md
    - git status
    - git add README.md
    - git commit -m "Update README with latest artifact URL"
    - git push origin ${CI_COMMIT_REF_NAME}
  dependencies:
    - generate_pdf
